package WordPart;

=head1 Word-part Manipulation

Database manipulation of word-part fragments

Scoring combinations of parsed and defined terminology

=head1 Data Model

=begin text

 affix       definition              etymology
 ---------------------------------------------
 ab          from, away              latin
 bio         life                    greek
 o           combining               NULL
 ortho       straight, right angles  greek
 phile?      loving, thriving        greek
 ic          belonging               greek
 ...

=end text

L<"orthophilic" - belonging to things that thrive at right angles|http://localhost:5000/parse?query=orthophilic>

=begin html

<hr/>

=end html

Used L<DBIx::Class::Schema::Loader|https://metacpan.org/release/DBIx-Class-Schema-Loader> for my existing database

=head1 ROUTES: Verbs & Behaviors

=begin html

<img src="pix/railroad.jpg" style="float:right" />

=end html

=over 4

=item get

Direct to index

Show the edit and parse forms

Search for records

Delete a record (anchor)

=item post

Add a record

Update a record

=back

=head1 Authorization

Using L<Dancer::Plugin::Auth::Extensible>.

=begin text

 get '/parse' => require_login sub { ...

=end text

Provides <code>/login</code> and <code>/logout</code> routes.

Configured in the <code>config.yml</code> file.

=head1 Search by Affix or Definition

=begin text

 get '/search' => require_login sub {
    ...
    my $type = params->{type};
    $type //= 'affix';  # Option via form: 'definition'
    ...
    my $fragments = $schema->resultset('Fragment')->search(
        {
            $type => { like => "%$like%" },
        },
        {
            order_by => { -asc => 'affix' }
        }
    );
    ...
 }

=end text

=head1 Post by ID or Database Columns

=begin text

 post '/update' => require_login sub {
    my $fragment = $schema->resultset('Fragment')->find(
        {
            id => params->{id}
        }
    );
    ...
 }

=end text

=for html

<p/>

=end html

=begin text

 post '/add' => require_login sub {
    ...
    $schema->resultset('Fragment')->create(
        {
            affix      => $affix,
            definition => params->{definition},
            etymology  => params->{etymology},
        }
    );
    ...
 };

=end text

=head1 New/Edit Template

=begin text

 <form action="/<% method %>" method="post">
     ...
     <input name="affix" type="text" value="<% affix %>" autofocus />
     ...
     <input name="prefix" type="checkbox"><label for="prefix">Prefix</label>
     <input name="suffix" type="checkbox"><label for="suffix">Suffix</label>
     ...
     <select name="etymology">
         <option value="">Choose a language...</option>
         <option value="greek" <% etymology == "greek" ? "selected" : "" %>>Greek</option>
     ...
     <input name="definition" type="text" value="<% definition %>" />
     ...
     <input type="submit" name="<% method %>" value="<% method FILTER ucfirst %>" class="small round button" />
     ...
     <% IF id %>
         <a href="/delete?id=<% id %>" class="small round button" onclick="return confirm('Delete <% affix %>?')">Delete</a>
     <% END %>
 </form>

=end text

=head1 Links

The code behind this presentation:

L<Word-Part on github|https://github.com/ology/Word-Part>

L<Lingua::Word::Parser|https://metacpan.org/release/Lingua-Word-Parser>

L<Pod::S5|https://metacpan.org/release/Pod-S5>

=cut

1;
__END__
:!pod2s5 --theme yatil --name "Gene Boggs" %
